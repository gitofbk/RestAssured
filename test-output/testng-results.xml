<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="6" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="12289" started-at="2020-09-19T17:16:20 IST" finished-at="2020-09-19T17:16:32 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="11895" started-at="2020-09-19T17:16:20 IST" finished-at="2020-09-19T17:16:32 IST">
      <class name="scripts.Assignment">
        <test-method status="PASS" signature="beforeTest(java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:scripts.Assignment@3043fe0e]" name="beforeTest" is-config="true" duration-ms="491" started-at="2020-09-19T17:16:20 IST" finished-at="2020-09-19T17:16:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://jsonplaceholder.typicode.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/posts]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void scripts.Assignment.testDelete(java.util.HashMap,java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testDelete(java.util.HashMap, java.lang.Object)[pri:0, instance:scripts.Assignment@3043fe0e]" name="testDelete" duration-ms="6915" started-at="2020-09-19T17:16:20 IST" data-provider="Data_Delete" finished-at="2020-09-19T17:16:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Content-type=application/json; charset=UTF-8}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:scripts.Assignment@3043fe0e]" name="afterMethod" is-config="true" duration-ms="180" started-at="2020-09-19T17:16:27 IST" finished-at="2020-09-19T17:16:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeTest(java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:scripts.Assignment@3043fe0e]" name="beforeTest" is-config="true" duration-ms="1" started-at="2020-09-19T17:16:27 IST" finished-at="2020-09-19T17:16:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://jsonplaceholder.typicode.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/posts]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void scripts.Assignment.testGet()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testGet()[pri:0, instance:scripts.Assignment@3043fe0e]" name="testGet" duration-ms="611" started-at="2020-09-19T17:16:27 IST" finished-at="2020-09-19T17:16:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:scripts.Assignment@3043fe0e]" name="afterMethod" is-config="true" duration-ms="38" started-at="2020-09-19T17:16:28 IST" finished-at="2020-09-19T17:16:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeTest(java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:scripts.Assignment@3043fe0e]" name="beforeTest" is-config="true" duration-ms="1" started-at="2020-09-19T17:16:28 IST" finished-at="2020-09-19T17:16:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://jsonplaceholder.typicode.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/posts]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void scripts.Assignment.testGetWithFilePath(java.util.HashMap,java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testGetWithFilePath(java.util.HashMap, java.lang.Object)[pri:0, instance:scripts.Assignment@3043fe0e]" name="testGetWithFilePath" duration-ms="777" started-at="2020-09-19T17:16:28 IST" data-provider="Data_Get" finished-at="2020-09-19T17:16:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Content-type=application/json; charset=UTF-8}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetWithFilePath -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:scripts.Assignment@3043fe0e]" name="afterMethod" is-config="true" duration-ms="39" started-at="2020-09-19T17:16:29 IST" finished-at="2020-09-19T17:16:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeTest(java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:scripts.Assignment@3043fe0e]" name="beforeTest" is-config="true" duration-ms="2" started-at="2020-09-19T17:16:29 IST" finished-at="2020-09-19T17:16:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://jsonplaceholder.typicode.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/posts]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void scripts.Assignment.testPost(java.util.HashMap,java.util.HashMap)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testPost(java.util.HashMap, java.util.HashMap)[pri:0, instance:scripts.Assignment@3043fe0e]" name="testPost" duration-ms="1810" started-at="2020-09-19T17:16:29 IST" data-provider="Data_Post" finished-at="2020-09-19T17:16:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Content-type=application/json; charset=UTF-8}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{title=foo, body=xybarz, userId=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPost -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:scripts.Assignment@3043fe0e]" name="afterMethod" is-config="true" duration-ms="37" started-at="2020-09-19T17:16:31 IST" finished-at="2020-09-19T17:16:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeTest(java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:scripts.Assignment@3043fe0e]" name="beforeTest" is-config="true" duration-ms="2" started-at="2020-09-19T17:16:31 IST" finished-at="2020-09-19T17:16:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://jsonplaceholder.typicode.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/posts]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void scripts.Assignment.testPut(java.util.HashMap,java.util.HashMap)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testPut(java.util.HashMap, java.util.HashMap)[pri:0, instance:scripts.Assignment@3043fe0e]" name="testPut" duration-ms="905" started-at="2020-09-19T17:16:31 IST" data-provider="Data_Put" finished-at="2020-09-19T17:16:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Content-type=application/json; charset=UTF-8}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{id=1, title=abc, body=xyz, userId=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:scripts.Assignment@3043fe0e]" name="afterMethod" is-config="true" duration-ms="32" started-at="2020-09-19T17:16:31 IST" finished-at="2020-09-19T17:16:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- scripts.Assignment -->
    </test> <!-- Test -->
    <test name="TestInvalid" duration-ms="374" started-at="2020-09-19T17:16:32 IST" finished-at="2020-09-19T17:16:32 IST">
      <class name="scripts.InvalidCase">
        <test-method status="PASS" signature="initialize()[pri:0, instance:scripts.InvalidCase@5bb21b69]" name="initialize" is-config="true" duration-ms="168" started-at="2020-09-19T17:16:19 IST" finished-at="2020-09-19T17:16:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="beforeTest(java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:scripts.InvalidCase@5bb21b69]" name="beforeTest" is-config="true" duration-ms="2" started-at="2020-09-19T17:16:32 IST" finished-at="2020-09-19T17:16:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://jsonplaceholder.typicode.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/invalidposts]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void scripts.InvalidCase.testInvalidPost()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testInvalidPost()[pri:0, instance:scripts.InvalidCase@5bb21b69]" name="testInvalidPost" duration-ms="323" started-at="2020-09-19T17:16:32 IST" finished-at="2020-09-19T17:16:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPost -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:scripts.InvalidCase@5bb21b69]" name="afterMethod" is-config="true" duration-ms="45" started-at="2020-09-19T17:16:32 IST" finished-at="2020-09-19T17:16:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:scripts.InvalidCase@5bb21b69]" name="tearDown" is-config="true" duration-ms="25" started-at="2020-09-19T17:16:32 IST" finished-at="2020-09-19T17:16:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- scripts.InvalidCase -->
    </test> <!-- TestInvalid -->
  </suite> <!-- Suite -->
</testng-results>
